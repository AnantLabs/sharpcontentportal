
ALTER TABLE {databaseOwner}SCP_ACCOUNTNUMBERS ADD (CONSTRAINT IX_SCP_ACCOUNTNUMBERS UNIQUE (PORTALID, ACCOUNTNUMBER)  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
CREATE INDEX {databaseOwner}IX_SCP_BANNERS ON {databaseOwner}SCP_BANNERS ( BannerTypeId) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_BANNERS_1 ON {databaseOwner}SCP_BANNERS ( VendorId) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_CLASSIFICATION ON {databaseOwner}SCP_CLASSIFICATION ( ParentId ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_DESKTOPMODULES_FRIENDL ON {databaseOwner}SCP_DESKTOPMODULES ( FriendlyName ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_FILES ON {databaseOwner}SCP_FILES (PortalId) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE UNIQUE INDEX {databaseOwner}IX_SCP_LOGTYPEKEY_SCP_LOGTYP ON {databaseOwner}SCP_EVENTLOGCONFIG
 ( LogTypeKey,LogTypePortalID ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_MODULEDEFINITIONS_1 ON {databaseOwner}SCP_MODULEDEFINITIONS
 ( DesktopModuleID ) TABLESPACE CSWS_DBO_INDEX01_128K
/
CREATE INDEX {databaseOwner}IX_SCP_MODULES ON {databaseOwner}SCP_MODULES ( ModuleDefID
 ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE UNIQUE INDEX {databaseOwner}IX_SCP_PROFILE ON {databaseOwner}SCP_PROFILE
 ( UserId,PortalId ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_PROFILEPROPERTYDEFINIT ON {databaseOwner}SCP_PROFILEPROPERTYDEFINITION
 ( PropertyName ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE UNIQUE INDEX {databaseOwner}IX_SCP_PROFILEPROPERTYDEFIN_1 ON {databaseOwner}SCP_PROFILEPROPERTYDEFINITION
 ( PortalID,ModuleDefID,PropertyName ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_ROLES ON {databaseOwner}SCP_ROLES ( BillingFrequency
 ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE UNIQUE INDEX {databaseOwner}IX_SCP_SEARCHITEM ON {databaseOwner}SCP_SEARCHITEM
 ( ModuleId,SearchKey ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_SITELOG ON {databaseOwner}SCP_SITELOG ( PortalId
 ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_TABS_1 ON {databaseOwner}SCP_TABS ( PortalID
 ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_TABS_2 ON {databaseOwner}SCP_TABS ( ParentId
 ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_USERPORTALS ON {databaseOwner}SCP_USERPORTALS
 ( PortalId ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_USERPORTALS_1 ON {databaseOwner}SCP_USERPORTALS
 ( UserId ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_USERPROFILE ON {databaseOwner}SCP_USERPROFILE
 ( UserID ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_USERROLES ON {databaseOwner}SCP_USERROLES ( RoleID
 ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_USERROLES_1 ON {databaseOwner}SCP_USERROLES (
 UserID ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
CREATE INDEX {databaseOwner}IX_SCP_VENDORCLASSIFICATION_1 ON {databaseOwner}SCP_VENDORCLASSIFICATION
 ( ClassificationId ) TABLESPACE CSWS_DBO_INDEX01_128K;
/
ALTER TABLE {databaseOwner}SCP_DESKTOPMODULES ADD ( CONSTRAINT IX_SCP_DESKTOPMODULES_MODULEN
 UNIQUE ( ModuleName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_MODULECONTROLS ADD ( CONSTRAINT IX_SCP_MODULECONTROLS
 UNIQUE ( ModuleDefID,ControlKey,ControlSrc )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_MODULEDEFINITIONS ADD ( CONSTRAINT IX_SCP_MODULEDEFINITIONS
 UNIQUE ( FriendlyName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PORTALALIAS ADD ( CONSTRAINT IX_SCP_PORTALALIAS
 UNIQUE ( HTTPAlias )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PORTALDESKTOPMODULES ADD ( CONSTRAINT IX_SCP_PORTALDESKTOPMODULES
 UNIQUE ( PortalID,DesktopModuleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_ROLEGROUPS ADD ( CONSTRAINT IX_SCP_ROLEGROUPNAME
 UNIQUE ( PortalID,RoleGroupName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_ROLES ADD ( CONSTRAINT IX_SCP_ROLENAME UNIQUE
 ( PortalID,RoleName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEMWORD ADD ( CONSTRAINT IX_SCP_SEARCHITEMWORD
 UNIQUE ( SearchItemID,SearchWordsID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHWORD ADD ( CONSTRAINT IX_SCP_SEARCHWORD
 UNIQUE ( Word )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SYSTEMMESSAGES ADD ( CONSTRAINT IX_SCP_SYSTEMMESSAGES
 UNIQUE ( MessageName,PortalID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_TABMODULES ADD ( CONSTRAINT IX_SCP_TABMODULES
 UNIQUE ( TabID,ModuleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_URLS ADD ( CONSTRAINT IX_SCP_URLS UNIQUE ( Url,PortalID
 )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_URLTRACKING ADD ( CONSTRAINT IX_SCP_URLTRACKING
 UNIQUE ( PortalID,Url,ModuleId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_USERS ADD ( CONSTRAINT IX_SCP_USERS UNIQUE (
 Username, AccountId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_VENDORCLASSIFICATION ADD ( CONSTRAINT IX_SCP_VENDORCLASSIFICATION
 UNIQUE ( VendorId,ClassificationId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_VENDORS ADD ( CONSTRAINT IX_SCP_VENDORS UNIQUE
 ( PortalId,VendorName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/

DECLARE 
 v_exists NUMBER(1,0);
BEGIN

 v_exists := 0;
 SELECT COUNT(*)
 INTO v_exists
 FROM user_tables
 WHERE LOWER(TABLE_NAME) = LOWER('scp_Version');

 IF v_exists = 0 THEN
 EXECUTE IMMEDIATE 'CREATE TABLE {databaseOwner}SCP_VERSION (
	 VersionId number(10,0) NOT NULL,
 	 Major number(10,0) NOT NULL,
	 Minor number(10,0) NOT NULL,
	 Build number(10,0) NOT NULL,
	 CreatedDate date NOT NULL) TABLESPACE CSWS_DBO_DATA01_128K';
 EXECUTE IMMEDIATE 'ALTER TABLE {databaseOwner}SCP_VERSION ADD (CONSTRAINT IX_SCP_VERSION UNIQUE (Major, Minor, Build) USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K)';
 END IF;

END;
/

ALTER TABLE {databaseOwner}SCP_ACCOUNTNUMBERS ADD ( CONSTRAINT PK_SCP_ACCOUNTNUMBERS
 PRIMARY KEY ( ACCOUNTID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_QUESTIONS ADD ( CONSTRAINT PK_SCP_QUESTIONS
 PRIMARY KEY ( QUESTIONID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_AFFILIATES ADD ( CONSTRAINT PK_SCP_AFFILIATES
 PRIMARY KEY ( AffiliateId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_ANONYMOUSUSERS ADD ( CONSTRAINT PK_SCP_ANONYMOUSUSERS
 PRIMARY KEY ( UserID,PortalID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_BANNERS ADD ( CONSTRAINT PK_SCP_BANNER PRIMARY
 KEY ( BannerId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_DESKTOPMODULES ADD ( CONSTRAINT PK_SCP_DESKTOPMODULES
 PRIMARY KEY ( DesktopModuleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_EVENTLOGCONFIG ADD ( CONSTRAINT PK_SCP_EVENTLOGCONFIG
 PRIMARY KEY ( ID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_FILES ADD ( CONSTRAINT PK_SCP_FILE PRIMARY KEY
 ( FileId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_FOLDERPERMISSION ADD ( CONSTRAINT PK_SCP_FOLDERPERMISSION
 PRIMARY KEY ( FolderPermissionID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_FOLDERS ADD ( CONSTRAINT PK_SCP_FOLDERS PRIMARY
 KEY ( FolderID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_HOSTSETTINGS ADD ( CONSTRAINT PK_SCP_HOSTSETTINGS
 PRIMARY KEY ( SettingName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_LISTS ADD ( CONSTRAINT PK_SCP_LISTS PRIMARY
 KEY ( ListName,Value,Text,ParentID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_MODULECONTROLS ADD ( CONSTRAINT PK_SCP_MODULECONTROLS
 PRIMARY KEY ( ModuleControlID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_MODULEDEFINITIONS ADD ( CONSTRAINT PK_SCP_MODULEDEFINITIONS
 PRIMARY KEY ( ModuleDefID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_MODULEPERMISSION ADD ( CONSTRAINT PK_SCP_MODULEPERMISSION
 PRIMARY KEY ( ModulePermissionID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_MODULES ADD ( CONSTRAINT PK_SCP_MODULES PRIMARY
 KEY ( ModuleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_MODULESETTINGS ADD ( CONSTRAINT PK_SCP_MODULESETTINGS
 PRIMARY KEY ( ModuleID,SettingName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PERMISSION ADD ( CONSTRAINT PK_SCP_PERMISSION
 PRIMARY KEY ( PermissionID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PORTALALIAS ADD ( CONSTRAINT PK_SCP_PORTALALIAS
 PRIMARY KEY ( PortalAliasID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PORTALDESKTOPMODULES ADD ( CONSTRAINT PK_SCP_PORTALDESKTOPMODULES
 PRIMARY KEY ( PortalDesktopModuleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PORTALS ADD ( CONSTRAINT PK_SCP_PORTALS PRIMARY
 KEY ( PortalID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PROFILE ADD ( CONSTRAINT PK_SCP_PROFILE PRIMARY
 KEY ( ProfileId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_PROFILEPROPERTYDEFINITION ADD ( CONSTRAINT PK_SCP_PROFILEPROPERTYDEFINIT
 PRIMARY KEY ( PropertyDefinitionID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_ROLEGROUPS ADD ( CONSTRAINT PK_SCP_ROLEGROUPS
 PRIMARY KEY ( RoleGroupID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_ROLES ADD ( CONSTRAINT PK_SCP_ROLES PRIMARY
 KEY ( RoleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SCHEDULE ADD ( CONSTRAINT PK_SCP_SCHEDULE PRIMARY
 KEY ( ScheduleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SCHEDULEHISTORY ADD ( CONSTRAINT PK_SCP_SCHEDULEHISTORY
 PRIMARY KEY ( ScheduleHistoryID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SCHEDULEITEMSETTINGS ADD ( CONSTRAINT PK_SCP_SCHEDULEITEMSETTINGS
 PRIMARY KEY ( ScheduleID,SettingName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHCOMMONWORDS ADD ( CONSTRAINT PK_SCP_SEARCHCOMMONWORDS
 PRIMARY KEY ( CommonWordID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHINDEXER ADD ( CONSTRAINT PK_SCP_SEARCHINDEXER
 PRIMARY KEY ( SearchIndexerID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEM ADD ( CONSTRAINT PK_SCP_SEARCHITEM
 PRIMARY KEY ( SearchItemID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEMWORDPOSITION ADD ( CONSTRAINT PK_SCP_SEARCHITEMWORDPOSITION
 PRIMARY KEY ( SearchItemWordPositionID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEMWORD ADD ( CONSTRAINT PK_SCP_SEARCHITEMWORDS
 PRIMARY KEY ( SearchItemWordID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SEARCHWORD ADD ( CONSTRAINT PK_SCP_SEARCHWORD
 PRIMARY KEY ( SearchWordsID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SITELOG ADD ( CONSTRAINT PK_SCP_SITELOG PRIMARY
 KEY ( SiteLogId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SKINS ADD ( CONSTRAINT PK_SCP_SKINS PRIMARY
 KEY ( SkinID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_SYSTEMMESSAGES ADD ( CONSTRAINT PK_SCP_SYSTEMMESSAGES
 PRIMARY KEY ( MessageID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_TABMODULES ADD ( CONSTRAINT PK_SCP_TABMODULES
 PRIMARY KEY ( TabModuleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_TABMODULESETTINGS ADD ( CONSTRAINT PK_SCP_TABMODULESETTINGS
 PRIMARY KEY ( TabModuleID,SettingName )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_TABPERMISSION ADD ( CONSTRAINT PK_SCP_TABPERMISSION
 PRIMARY KEY ( TabPermissionID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_TABS ADD ( CONSTRAINT PK_SCP_TABS PRIMARY KEY
 ( TabID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_URLLOG ADD ( CONSTRAINT PK_SCP_URLLOG PRIMARY
 KEY ( UrlLogID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_URLS ADD ( CONSTRAINT PK_SCP_URLS PRIMARY KEY
 ( UrlID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_URLTRACKING ADD ( CONSTRAINT PK_SCP_URLTRACKING
 PRIMARY KEY ( UrlTrackingID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_USERPORTALS ADD ( CONSTRAINT PK_SCP_USERPORTALS
 PRIMARY KEY ( UserId,PortalId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_USERPROFILE ADD ( CONSTRAINT PK_SCP_USERPROFILE
 PRIMARY KEY ( ProfileID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_USERROLES ADD ( CONSTRAINT PK_SCP_USERROLES
 PRIMARY KEY ( UserRoleID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_USERS ADD ( CONSTRAINT PK_SCP_USERS PRIMARY
 KEY ( UserID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_USERSONLINE ADD ( CONSTRAINT PK_SCP_USERSONLINE
 PRIMARY KEY ( UserID,PortalID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_VENDORS ADD ( CONSTRAINT PK_SCP_VENDOR PRIMARY
 KEY ( VendorId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_CLASSIFICATION ADD ( CONSTRAINT PK_SCP_VENDORCATEGORY
 PRIMARY KEY ( ClassificationId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_VENDORCLASSIFICATION ADD ( CONSTRAINT PK_SCP_VENDORCLASSIFICATION
 PRIMARY KEY ( VendorClassificationId )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_EVENTLOG ADD ( CONSTRAINT PK_EVENTLOGMASTER PRIMARY
 KEY ( LogGUID )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/
ALTER TABLE {databaseOwner}SCP_EVENTLOGTYPES ADD ( CONSTRAINT PK_EVENTLOGTYPES
 PRIMARY KEY ( LogTypeKey )  USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K);
/

DECLARE 
 v_exists NUMBER(1,0);
BEGIN

 v_exists := 0;
 SELECT COUNT(*)
 INTO v_exists
 FROM user_tables
 WHERE LOWER(TABLE_NAME) = LOWER('scp_Version');

 IF v_exists = 0 THEN
 EXECUTE IMMEDIATE 'CREATE TABLE {databaseOwner}SCP_VERSION (
	 VersionId number(10,0) NOT NULL,
 	 Major number(10,0) NOT NULL,
	 Minor number(10,0) NOT NULL,
	 Build number(10,0) NOT NULL,
	 CreatedDate date NOT NULL) TABLESPACE CSWS_DBO_DATA01_128K';
 EXECUTE IMMEDIATE 'ALTER TABLE {databaseOwner}scp_Version ADD (CONSTRAINT PK_SCP_VERSION PRIMARY KEY (VersionId) USING INDEX TABLESPACE CSWS_DBO_INDEX01_128K)';
 END IF;

END;
/

ALTER TABLE {databaseOwner}SCP_USERS ADD ( CONSTRAINT FK_SCP_USERS_SCP_ACCOUNTNUMS 
FOREIGN KEY (ACCOUNTID) REFERENCES {databaseOwner}SCP_ACCOUNTNUMBERS (ACCOUNTID) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_AFFILIATES ADD ( CONSTRAINT FK_SCP_AFFILIATES_SCP_VENDOR
 FOREIGN KEY ( VendorId ) REFERENCES {databaseOwner}SCP_VENDORS ( VendorId
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_ANONYMOUSUSERS ADD ( CONSTRAINT FK_SCP_ANONYMOUSUSERS_SCP_PO
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_BANNERS ADD ( CONSTRAINT FK_SCP_BANNER_SCP_VENDOR
 FOREIGN KEY ( VendorId ) REFERENCES {databaseOwner}SCP_VENDORS ( VendorId
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_CLASSIFICATION ADD ( CONSTRAINT FK_SCP_CLASSIFICATION_SCP_CL
 FOREIGN KEY ( ParentId ) REFERENCES {databaseOwner}SCP_CLASSIFICATION ( ClassificationId
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_EVENTLOGCONFIG ADD ( CONSTRAINT FK_SCP_LOGCFG_SCP_LOGTYPE
 FOREIGN KEY ( LogTypeKey ) REFERENCES {databaseOwner}SCP_EVENTLOGTYPES ( LogTypeKey
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_EVENTLOG ADD ( CONSTRAINT FK_SCP_EVTLOG_SCP_EVTLOGTYPE
 FOREIGN KEY ( LogTypeKey ) REFERENCES {databaseOwner}SCP_EVENTLOGTYPES ( LogTypeKey
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_EVENTLOG ADD ( CONSTRAINT FK_SCP_EVENTLOG_SCP_EVENTL_1
 FOREIGN KEY ( LogConfigID ) REFERENCES {databaseOwner}SCP_EVENTLOGCONFIG (
 ID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_FILES ADD ( CONSTRAINT FK_SCP_FILES_SCP_FOLDERS
 FOREIGN KEY ( FolderID ) REFERENCES {databaseOwner}SCP_FOLDERS ( FolderID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_FILES ADD ( CONSTRAINT FK_SCP_FILES_SCP_PORTALS
 FOREIGN KEY ( PortalId ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_FOLDERPERMISSION ADD ( CONSTRAINT FK_SCP_FLDPERM_SCP_PERM
 FOREIGN KEY ( PermissionID ) REFERENCES {databaseOwner}SCP_PERMISSION ( PermissionID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_FOLDERPERMISSION ADD ( CONSTRAINT FK_SCP_FLDPERM_SCP_FLD
 FOREIGN KEY ( FolderID ) REFERENCES {databaseOwner}SCP_FOLDERS ( FolderID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_FOLDERS ADD ( CONSTRAINT FK_SCP_FOLDERS_SCP_PORTALS
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_MODULECONTROLS ADD ( CONSTRAINT FK_SCP_MODCTRLS_SCP_MODDEFS
 FOREIGN KEY ( ModuleDefID ) REFERENCES {databaseOwner}SCP_MODULEDEFINITIONS
 ( ModuleDefID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_MODULEDEFINITIONS ADD ( CONSTRAINT FK_SCP_MODDEF_SCP_DESKTOPMOD
 FOREIGN KEY ( DesktopModuleID ) REFERENCES {databaseOwner}SCP_DESKTOPMODULES
 ( DesktopModuleID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_MODULEPERMISSION ADD ( CONSTRAINT FK_SCP_MODPERM_SCP_PERM
 FOREIGN KEY ( PermissionID ) REFERENCES {databaseOwner}SCP_PERMISSION ( PermissionID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_MODULEPERMISSION ADD ( CONSTRAINT FK_SCP_MODPERM_CSW_MODS
 FOREIGN KEY ( ModuleID ) REFERENCES {databaseOwner}SCP_MODULES ( ModuleID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_MODULESETTINGS ADD ( CONSTRAINT FK_SCP_MODSETTINGS_SCP_MODS
 FOREIGN KEY ( ModuleID ) REFERENCES {databaseOwner}SCP_MODULES ( ModuleID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_MODULES ADD ( CONSTRAINT FK_SCP_MODULES_SCP_MODULEDEF
 FOREIGN KEY ( ModuleDefID ) REFERENCES {databaseOwner}SCP_MODULEDEFINITIONS
 ( ModuleDefID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_MODULES ADD ( CONSTRAINT FK_SCP_MODULES_SCP_PORTALS
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_PORTALALIAS ADD ( CONSTRAINT FK_SCP_PORTALALIAS_SCP_PORTA
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_PORTALDESKTOPMODULES ADD ( CONSTRAINT FK_SCP_PORTALDESKTOPMODULES_1
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_PORTALDESKTOPMODULES ADD ( CONSTRAINT FK_SCP_PORTALDESKTOPMODULES_C
 FOREIGN KEY ( DesktopModuleID ) REFERENCES {databaseOwner}SCP_DESKTOPMODULES
 ( DesktopModuleID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_PROFILEPROPERTYDEFINITION ADD ( CONSTRAINT FK_SCP_PROFPROPDEF_SCP_PORTS
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_PROFILE ADD ( CONSTRAINT FK_SCP_PROFILE_SCP_PORTALS
 FOREIGN KEY ( PortalId ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_PROFILE ADD ( CONSTRAINT FK_SCP_PROFILE_SCP_USERS
 FOREIGN KEY ( UserId ) REFERENCES {databaseOwner}SCP_USERS ( UserID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_ROLEGROUPS ADD ( CONSTRAINT FK_SCP_ROLEGROUPS_SCP_PORTAL
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_ROLES ADD ( CONSTRAINT FK_SCP_ROLES_SCP_PORTALS
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_ROLES ADD ( CONSTRAINT FK_SCP_ROLES_SCP_ROLEGROUPS
 FOREIGN KEY ( RoleGroupID ) REFERENCES {databaseOwner}SCP_ROLEGROUPS ( RoleGroupID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SCHEDULEHISTORY ADD ( CONSTRAINT FK_SCP_SCHEDHIST_SCP_SCHED
 FOREIGN KEY ( ScheduleID ) REFERENCES {databaseOwner}SCP_SCHEDULE ( ScheduleID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SCHEDULEITEMSETTINGS ADD ( CONSTRAINT FK_SCP_SCHEDITMSET_SCP_SCHED
 FOREIGN KEY ( ScheduleID ) REFERENCES {databaseOwner}SCP_SCHEDULE ( ScheduleID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEMWORDPOSITION ADD ( CONSTRAINT FK_SCP_SEARCHITEMWORDPOSITION
 FOREIGN KEY ( SearchItemWordID ) REFERENCES {databaseOwner}SCP_SEARCHITEMWORD
 ( SearchItemWordID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEMWORD ADD ( CONSTRAINT FK_SCP_SEARCHITEMWORD_SCP_SE
 FOREIGN KEY ( SearchWordsID ) REFERENCES {databaseOwner}SCP_SEARCHWORD ( SearchWordsID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEMWORD ADD ( CONSTRAINT FK_SCP_SEARCHITEMWORD_SCP__1
 FOREIGN KEY ( SearchItemID ) REFERENCES {databaseOwner}SCP_SEARCHITEM ( SearchItemID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SEARCHITEM ADD ( CONSTRAINT FK_SCP_SEARCHITEM_SCP_MODULE
 FOREIGN KEY ( ModuleId ) REFERENCES {databaseOwner}SCP_MODULES ( ModuleID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SITELOG ADD ( CONSTRAINT FK_SCP_SITELOG_SCP_PORTALS
 FOREIGN KEY ( PortalId ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SKINS ADD ( CONSTRAINT FK_SCP_SKINS_SCP_PORTALS
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_SYSTEMMESSAGES ADD ( CONSTRAINT FK_SCP_SYSTEMMESSAGES_SCP_PO
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_TABMODULESETTINGS ADD ( CONSTRAINT FK_SCP_TABMODULESETTINGS_CSWS
 FOREIGN KEY ( TabModuleID ) REFERENCES {databaseOwner}SCP_TABMODULES ( TabModuleID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_TABMODULES ADD ( CONSTRAINT FK_SCP_TABMODULES_SCP_MODULE
 FOREIGN KEY ( ModuleID ) REFERENCES {databaseOwner}SCP_MODULES ( ModuleID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_TABMODULES ADD ( CONSTRAINT FK_SCP_TABMODULES_SCP_TABS
 FOREIGN KEY ( TabID ) REFERENCES {databaseOwner}SCP_TABS ( TabID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_TABPERMISSION ADD ( CONSTRAINT FK_SCP_TABPERMISSION_SCP_PER
 FOREIGN KEY ( PermissionID ) REFERENCES {databaseOwner}SCP_PERMISSION ( PermissionID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_TABPERMISSION ADD ( CONSTRAINT FK_SCP_TABPERMISSION_SCP_TAB
 FOREIGN KEY ( TabID ) REFERENCES {databaseOwner}SCP_TABS ( TabID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_TABS ADD ( CONSTRAINT FK_SCP_TABS_SCP_PORTALS
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_TABS ADD ( CONSTRAINT FK_SCP_TABS_SCP_TABS
 FOREIGN KEY ( ParentId ) REFERENCES {databaseOwner}SCP_TABS ( TabID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_URLLOG ADD ( CONSTRAINT FK_SCP_URLLOG_SCP_URLTRACKIN
 FOREIGN KEY ( UrlTrackingID ) REFERENCES {databaseOwner}SCP_URLTRACKING (
 UrlTrackingID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_URLS ADD ( CONSTRAINT FK_SCP_URLS_SCP_PORTALS
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_URLTRACKING ADD ( CONSTRAINT FK_SCP_URLTRACKING_SCP_PORTA
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERPORTALS ADD ( CONSTRAINT FK_SCP_USERPORTALS_SCP_PORTA
 FOREIGN KEY ( PortalId ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERPORTALS ADD ( CONSTRAINT FK_SCP_USERPORTALS_SCP_USERS
 FOREIGN KEY ( UserId ) REFERENCES {databaseOwner}SCP_USERS ( UserID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERPROFILE ADD ( CONSTRAINT FK_SCP_USERPROFILE_SCP_PROFI
 FOREIGN KEY ( PropertyDefinitionID ) REFERENCES {databaseOwner}SCP_PROFILEPROPERTYDEFINITION
 ( PropertyDefinitionID ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERPROFILE ADD ( CONSTRAINT FK_SCP_USERPROFILE_SCP_USERS
 FOREIGN KEY ( UserID ) REFERENCES {databaseOwner}SCP_USERS ( UserID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERROLES ADD ( CONSTRAINT FK_SCP_USERROLES_SCP_ROLES
 FOREIGN KEY ( RoleID ) REFERENCES {databaseOwner}SCP_ROLES ( RoleID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERROLES ADD ( CONSTRAINT FK_SCP_USERROLES_SCP_USERS
 FOREIGN KEY ( UserID ) REFERENCES {databaseOwner}SCP_USERS ( UserID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERSONLINE ADD ( CONSTRAINT FK_SCP_USERSONLINE_SCP_PORTA
 FOREIGN KEY ( PortalID ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_USERSONLINE ADD ( CONSTRAINT FK_SCP_USERSONLINE_SCP_USERS
 FOREIGN KEY ( UserID ) REFERENCES {databaseOwner}SCP_USERS ( UserID ) ON DELETE
 CASCADE );
/
ALTER TABLE {databaseOwner}SCP_VENDORCLASSIFICATION ADD ( CONSTRAINT FK_SCP_VENDORCLASSIFICATION_1
 FOREIGN KEY ( ClassificationId ) REFERENCES {databaseOwner}SCP_CLASSIFICATION
 ( ClassificationId ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_VENDORCLASSIFICATION ADD ( CONSTRAINT FK_SCP_VENDORCLASSIFICATION_C
 FOREIGN KEY ( VendorId ) REFERENCES {databaseOwner}SCP_VENDORS ( VendorId
 ) ON DELETE CASCADE );
/
ALTER TABLE {databaseOwner}SCP_VENDORS ADD ( CONSTRAINT FK_SCP_VENDOR_SCP_PORTALS
 FOREIGN KEY ( PortalId ) REFERENCES {databaseOwner}SCP_PORTALS ( PortalID
 ) ON DELETE CASCADE );
/